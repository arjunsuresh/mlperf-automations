name: MLPerf inference ResNet50

on:
  pull_request_target:
    branches: [ "main", "dev", "mlperf-inference" ]
    paths:
      - '.github/workflows/test-mlperf-inference-resnet50.yml'
      - '**'
      - '!**.md'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      CM_INDEX: "on"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ "3.12" ]
        backend: [ "onnxruntime", "tf" ]
        implementation: [ "python", "cpp" ]
        exclude:
          - backend: tf
            implementation: cpp
          - os: macos-latest
            backend: tf
          - os: windows-latest
            implementation: cpp
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Configure git longpaths (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        git config --system core.longpaths true
    - name: Install dependencies
      run: |
        CM_PULL_DEFAULT_MLOPS_REPO=no pip install cm4mlops
        cm pull repo --url=${{ github.event.pull_request.head.repo.html_url }} --checkout=${{ github.event.pull_request.head.ref }}
    - name: Test MLPerf Inference ResNet50 (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cm run script --tags=run-mlperf,inference,_submission,_short --submitter="MLCommons" --pull_changes=yes --pull_inference_changes=yes --hw_name=gh_${{ matrix.os }}_x86 --model=resnet50 --adr.loadgen.tags=_from-pip --pip_loadgen=yes --implementation=${{ matrix.implementation }} --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=500 --target_qps=1 -v --quiet 
    - name: Test MLPerf Inference ResNet50 (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cm run script --tags=run-mlperf,inference,_submission,_short --submitter="MLCommons" --pull_changes=yes --pull_inference_changes=yes --hw_name=gh_${{ matrix.os }}_x86 --model=resnet50 --implementation=${{ matrix.implementation }} --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=500 --target_qps=1 -v --quiet 
    - name: Retrieve secrets from Keeper
      id: ksecrets
      uses: Keeper-Security/ksm-action@master
      with:
        keeper-secret-config: ${{ secrets.KSM_CONFIG }}
        secrets: |-
          ubwkjh-Ii8UJDpG2EoU6GQ/field/Access Token > env:PAT  # Fetch PAT and store in environment variable

    - name: Push Results
      if: github.repository_owner == 'mlcommons'
      env:
          GITHUB_TOKEN: ${{ env.PAT }}
      run: |
        git config --global user.name mlcommons-bot
        git config --global user.email "mlcommons-bot@users.noreply.github.com"
        # git config --global credential.https://github.com.helper ""
        # git config --global credential.https://github.com.helper "!gh auth git-credential"
        # git config --global credential.https://gist.github.com.helper ""
        # git config --global credential.https://gist.github.com.helper "!gh auth git-credential"
        # cm run script --tags=gh,auth,cli --with_token=${{ env.PAT }}
        cm run script --tags=push,github,mlperf,inference,submission --env.CM_GH_TOKEN=${{ env.PAT }} --repo_url=https://github.com/mlcommons/mlperf_inference_test_submissions_v5.0 --repo_branch=auto-update --commit_message="Results from R50 GH action on ${{ matrix.os }}" --quiet
